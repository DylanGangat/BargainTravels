{"version":3,"sources":["scripts/script.js","scripts/products.js"],"names":["navToggle","document","querySelector","overlay","nav","shoppingCart","JSON","parse","localStorage","getItem","shoppingCartTotalIcon","cartItems","cartTotal","cart","length","textContent","classList","remove","add","addEventListener","e","currentTarget","hasAttribute","toggle","target","parent","addToCart","colorGroup","colors","querySelectorAll","changingImages","savedCart","getProductDetails","name","price","parseInt","dataset","size","value","activeColor","quantity","mockupImage","mockup","randomNumber","Math","floor","random","item","color","image","id","push","slice","reverse","filter","index","array","findIndex","t","setItem","stringify","updateMockupColor","contains","forEach","imageId","console","log"],"mappings":"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","file":"products.2af30ee4.js","sourceRoot":"..\\public","sourcesContent":["const navToggle = document.querySelector(\"[data-nav-toggle]\");\r\nconst overlay = document.querySelector(\"[data-overlay]\");\r\nconst nav = document.querySelector(\"[data-nav]\");\r\nconst shoppingCart = JSON.parse(localStorage.getItem(\"SHOPPING_CART\"));\r\nexport const shoppingCartTotalIcon = document.querySelector(\r\n  \"[data-shoppingcart-icon]\"\r\n);\r\nexport const cartItems = shoppingCartTotalIcon.querySelector(\r\n  \".shopping-cart-total\"\r\n);\r\n\r\n// Function for updating the items total thats above the shopping icon\r\nexport const cartTotal = cart => {\r\n  if (cart.length) {\r\n    cartItems.textContent = cart.length;\r\n    cartItems.classList.remove(\"visually-hidden\");\r\n  } else {\r\n    cartItems.classList.add(\"visually-hidden\");\r\n  }\r\n};\r\n\r\n// To hide items total when\r\nif (shoppingCart != null && shoppingCart.length !== 0) {\r\n  cartTotal(shoppingCart);\r\n} else {\r\n  cartItems.classList.add(\"visually-hidden\");\r\n}\r\n\r\nnavToggle.addEventListener(\"click\", e => {\r\n  if (!e.currentTarget.hasAttribute(\"data-nav-toggle\")) return;\r\n  nav.classList.toggle(\"visually-hidden\");\r\n  nav.classList.toggle(\"active\");\r\n  overlay.classList.toggle(\"visually-hidden\");\r\n  overlay.classList.toggle(\"active\");\r\n});\r\n\r\noverlay.addEventListener(\"click\", e => {\r\n  if (!e.target.hasAttribute(\"data-overlay\")) return;\r\n  nav.classList.add(\"visually-hidden\");\r\n  nav.classList.toggle(\"active\");\r\n  overlay.classList.add(\"visually-hidden\");\r\n  overlay.classList.remove(\"active\");\r\n});\r\n","import \"./script.js\";\r\nimport { shoppingCartTotalIcon, cartItems, cartTotal } from \"./script.js\";\r\nconst parent = document.querySelector(\"[data-product-info]\");\r\nconst addToCart = document.querySelector(\".btn\");\r\n\r\n// For changing image and active color\r\nconst colorGroup = document.querySelector(\".colours-group\");\r\nconst colors = document.querySelectorAll(\".colour-block\");\r\nconst changingImages = document.querySelectorAll(\"[data-changing-image]\");\r\nexport const savedCart = JSON.parse(localStorage.getItem(\"SHOPPING_CART\"));\r\n\r\n// Array where we put all add to cart items\r\nlet shoppingCart = [];\r\n\r\n// To check if there is a cart with a length and then it would update the cart total icon\r\nif (savedCart && savedCart.length !== 0) {\r\n  shoppingCart = savedCart;\r\n  cartTotal(shoppingCart);\r\n}\r\n\r\nconst getProductDetails = () => {\r\n  const name = parent.querySelector(\"[data-name]\").textContent;\r\n  const price = parseInt(parent.querySelector(\"[data-price]\").dataset.price);\r\n  const size = parent.querySelector(\"[data-size]\").value;\r\n  const colorGroup = parent.querySelector(\"[data-color-group]\");\r\n  const activeColor = colorGroup.querySelector(\".active\").textContent;\r\n  const quantity = parseInt(parent.querySelector(\"[data-quantity]\").value);\r\n  const mockupImage = document.querySelector(\".active\").dataset.mockup;\r\n  const randomNumber = Math.floor(Math.random() * 1000 + 1);\r\n\r\n  const item = {};\r\n  item.name = name;\r\n  item.price = price;\r\n  item.quantity = quantity;\r\n  item.size = size;\r\n  item.color = activeColor;\r\n  item.image = mockupImage;\r\n  item.id = randomNumber;\r\n\r\n  // So the user has to add a size to continue\r\n  if (item.size === \"\") return;\r\n\r\n  shoppingCart.push(item);\r\n\r\n  // It checks to see if you added the same sized item and same names and then filters and removes your previous item and replaces it with an new item.\r\n  const cart = shoppingCart\r\n    .slice()\r\n    .reverse()\r\n    .filter(\r\n      (item, index, array) =>\r\n        array.findIndex(\r\n          t =>\r\n            t.size === item.size &&\r\n            t.name === item.name &&\r\n            t.color === item.color\r\n        ) === index\r\n    )\r\n    .reverse();\r\n\r\n  cartTotal(cart);\r\n\r\n  localStorage.setItem(\"SHOPPING_CART\", JSON.stringify(cart));\r\n};\r\n\r\naddToCart.addEventListener(\"click\", () => {\r\n  getProductDetails();\r\n});\r\n\r\nconst updateMockupColor = e => {\r\n  if (e.target.classList.contains(\"colour-block\")) {\r\n    // To reset the color groups by removing all active states\r\n    colors.forEach(color => color.classList.remove(\"active\"));\r\n    // To add the active state to the onn you clicked\r\n    const activeColor = e.target.classList.add(\"active\");\r\n    // To get the id so i can use it to select the right image to display\r\n    const imageId = e.target.dataset.color;\r\n    console.log(\"IMAGEID:\", imageId);\r\n    // To select the image that i want to display\r\n    const image = document.querySelector(`${imageId}`);\r\n    console.log(\"IMAGE:\", image);\r\n    // To reset the images so they are all hidden\r\n    changingImages.forEach(image => image.classList.add(\"visually-hidden\"));\r\n    // To remove the hidden on the image i want to display\r\n    image.classList.remove(\"visually-hidden\");\r\n  }\r\n};\r\n\r\ncolorGroup.addEventListener(\"click\", e => {\r\n  updateMockupColor(e);\r\n});\r\n"]}