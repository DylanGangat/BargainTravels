{"version":3,"sources":["scripts/script.js","scripts/products.js"],"names":["navToggle","document","querySelector","overlay","nav","shoppingCart","JSON","parse","localStorage","getItem","shoppingCartTotalIcon","cartItems","cartTotal","cart","length","textContent","classList","remove","add","addEventListener","e","currentTarget","hasAttribute","toggle","target","parent","addToCart","colorGroup","colors","querySelectorAll","changingImages","savedCart","console","log","getProductDetails","name","price","parseInt","dataset","size","value","activeColor","quantity","mockupImage","mockup","randomNumber","Math","floor","random","item","color","image","id","push","slice","reverse","filter","index","array","findIndex","t","setItem","stringify","updateMockupColor","contains","forEach","imageId"],"mappings":"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","file":"products.d2d8c758.js","sourceRoot":"..\\public","sourcesContent":["const navToggle = document.querySelector(\"[data-nav-toggle]\");\r\nconst overlay = document.querySelector(\"[data-overlay]\");\r\nconst nav = document.querySelector(\"[data-nav]\");\r\nconst shoppingCart = JSON.parse(localStorage.getItem(\"SHOPPING_CART\"));\r\nexport const shoppingCartTotalIcon = document.querySelector(\r\n  \"[data-shoppingcart-icon]\"\r\n);\r\nexport const cartItems = shoppingCartTotalIcon.querySelector(\r\n  \".shopping-cart-total\"\r\n);\r\n\r\n// Function for updating the items total thats above the shopping icon\r\nexport const cartTotal = cart => {\r\n  if (cart.length) {\r\n    cartItems.textContent = cart.length;\r\n    cartItems.classList.remove(\"visually-hidden\");\r\n  } else {\r\n    cartItems.classList.add(\"visually-hidden\");\r\n  }\r\n};\r\n\r\n// tTo hide items total when\r\nif (shoppingCart != null && shoppingCart.length !== 0) {\r\n  cartTotal(shoppingCart);\r\n} else {\r\n  cartItems.classList.add(\"visually-hidden\");\r\n}\r\n\r\nnavToggle.addEventListener(\"click\", e => {\r\n  if (!e.currentTarget.hasAttribute(\"data-nav-toggle\")) return;\r\n  nav.classList.toggle(\"hidden\");\r\n  overlay.classList.toggle(\"hidden\");\r\n});\r\n\r\noverlay.addEventListener(\"click\", e => {\r\n  if (!e.target.hasAttribute(\"data-overlay\")) return;\r\n  nav.classList.add(\"hidden\");\r\n  overlay.classList.add(\"hidden\");\r\n});\r\n","import \"./script.js\";\r\nimport { shoppingCartTotalIcon, cartItems, cartTotal } from \"./script.js\";\r\nconst parent = document.querySelector(\"[data-product-info]\");\r\nconst addToCart = document.querySelector(\".btn\");\r\n\r\n// For changing image and active color\r\nconst colorGroup = document.querySelector(\".colours-group\");\r\nconst colors = document.querySelectorAll(\".colour-block\");\r\nconst changingImages = document.querySelectorAll(\"[data-changing-image]\");\r\nexport const savedCart = JSON.parse(localStorage.getItem(\"SHOPPING_CART\"));\r\nconsole.log(\"savedCart:\", savedCart);\r\n// Array where we put all add to cart items\r\nlet shoppingCart = [];\r\n\r\nif (savedCart) {\r\n  shoppingCart = savedCart;\r\n  cartTotal(shoppingCart);\r\n}\r\n\r\nconst getProductDetails = () => {\r\n  const name = parent.querySelector(\"[data-name]\").textContent;\r\n  const price = parseInt(parent.querySelector(\"[data-price]\").dataset.price);\r\n  const size = parent.querySelector(\"[data-size]\").value;\r\n  const colorGroup = parent.querySelector(\"[data-color-group]\");\r\n  const activeColor = colorGroup.querySelector(\".active\").textContent;\r\n  const quantity = parseInt(parent.querySelector(\"[data-quantity]\").value);\r\n  const mockupImage = document.querySelector(\".active\").dataset.mockup;\r\n  console.log(\"mockupImage:\", mockupImage);\r\n  console.log(\r\n    name,\r\n    price,\r\n    size,\r\n    activeColor,\r\n    quantity,\r\n    mockupImage,\r\n    \"TYPEOF:\",\r\n    typeof mockup\r\n  );\r\n  const randomNumber = Math.floor(Math.random() * 1000 + 1);\r\n\r\n  const item = {};\r\n  item.name = name;\r\n  item.price = price;\r\n  item.quantity = quantity;\r\n  item.size = size;\r\n  item.color = activeColor;\r\n  item.image = mockupImage;\r\n  item.id = randomNumber;\r\n\r\n  // So the user has to add a size to continue\r\n  if (item.size === \"\") return;\r\n\r\n  shoppingCart.push(item);\r\n\r\n  // It checks to see if you added the same sized item and same names and then filters and removes your previous item and replaces it with an new item.\r\n  const cart = shoppingCart\r\n    .slice()\r\n    .reverse()\r\n    .filter(\r\n      (item, index, array) =>\r\n        array.findIndex(\r\n          t =>\r\n            t.size === item.size &&\r\n            t.name === item.name &&\r\n            t.color === item.color\r\n        ) === index\r\n    )\r\n    .reverse();\r\n\r\n  cartTotal(cart);\r\n\r\n  localStorage.setItem(\"SHOPPING_CART\", JSON.stringify(cart));\r\n\r\n  console.log(\r\n    \"Item:\",\r\n    item,\r\n    \"Shopping Cart:\",\r\n    shoppingCart,\r\n    \"Cart:\",\r\n    cart,\r\n    cart.length\r\n  );\r\n};\r\n\r\naddToCart.addEventListener(\"click\", () => {\r\n  getProductDetails();\r\n});\r\n\r\nconst updateMockupColor = e => {\r\n  if (e.target.classList.contains(\"colour-block\")) {\r\n    console.log(e.target);\r\n    // To reset the color groups by removing all active states\r\n    colors.forEach(color => color.classList.remove(\"active\"));\r\n    // To add the active state to the onn you clicked\r\n    const activeColor = e.target.classList.add(\"active\");\r\n    // To get the id so i can use it to select the right image to display\r\n    const imageId = e.target.dataset.color;\r\n    console.log(\"IMAGEID:\", imageId);\r\n    // To select the image that i want to display\r\n    const image = document.querySelector(`${imageId}`);\r\n    console.log(\"IMAGE:\", image);\r\n    // To reset the images so they are all hidden\r\n    changingImages.forEach(image => image.classList.add(\"visually-hidden\"));\r\n    // To remove the hidden on the image i want to display\r\n    image.classList.remove(\"visually-hidden\");\r\n  }\r\n};\r\n\r\ncolorGroup.addEventListener(\"click\", e => {\r\n  updateMockupColor(e);\r\n});\r\n"]}