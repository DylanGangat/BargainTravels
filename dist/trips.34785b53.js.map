{"version":3,"sources":["scripts/script.js","scripts/trips.js"],"names":["navToggle","document","querySelector","overlay","nav","shoppingCart","JSON","parse","localStorage","getItem","shoppingCartTotalIcon","cartItems","cartTotal","cart","length","textContent","classList","remove","add","addEventListener","e","currentTarget","hasAttribute","toggle","target","destinationsGrid","activities","p","innerHTML","destinationTemplateCard","item","image","name","info","rating","reviews","card","forEach","contains","closeBtn","closest","parent","parentElement","newActivities","filter","setItem","stringify"],"mappings":"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","file":"trips.34785b53.js","sourceRoot":"..\\public","sourcesContent":["const navToggle = document.querySelector(\"[data-nav-toggle]\");\r\nconst overlay = document.querySelector(\"[data-overlay]\");\r\nconst nav = document.querySelector(\"[data-nav]\");\r\nconst shoppingCart = JSON.parse(localStorage.getItem(\"SHOPPING_CART\"));\r\nexport const shoppingCartTotalIcon = document.querySelector(\r\n  \"[data-shoppingcart-icon]\"\r\n);\r\nexport const cartItems = shoppingCartTotalIcon.querySelector(\r\n  \".shopping-cart-total\"\r\n);\r\n\r\n// Function for updating the items total thats above the shopping icon\r\nexport const cartTotal = cart => {\r\n  if (cart.length) {\r\n    cartItems.textContent = cart.length;\r\n    cartItems.classList.remove(\"visually-hidden\");\r\n  } else {\r\n    cartItems.classList.add(\"visually-hidden\");\r\n  }\r\n};\r\n\r\n// tTo hide items total when\r\nif (shoppingCart != null && shoppingCart.length !== 0) {\r\n  cartTotal(shoppingCart);\r\n} else {\r\n  cartItems.classList.add(\"visually-hidden\");\r\n}\r\n\r\nnavToggle.addEventListener(\"click\", e => {\r\n  if (!e.currentTarget.hasAttribute(\"data-nav-toggle\")) return;\r\n  nav.classList.toggle(\"hidden\");\r\n  overlay.classList.toggle(\"hidden\");\r\n});\r\n\r\noverlay.addEventListener(\"click\", e => {\r\n  if (!e.target.hasAttribute(\"data-overlay\")) return;\r\n  nav.classList.add(\"hidden\");\r\n  overlay.classList.add(\"hidden\");\r\n});\r\n","import \"./script.js\";\r\n\r\nconst destinationsGrid = document.querySelector(\"[data-destinations-grid]\");\r\nlet activities = JSON.parse(localStorage.getItem(\"LOVED_PLACES\"));\r\nconst p = document.querySelector(\"[data-unsaved-message]\");\r\n\r\ndestinationsGrid.innerHTML = \"\";\r\nconst destinationTemplateCard = item => {\r\n  const { image, name, info, rating, reviews } = item;\r\n\r\n  const card = `\r\n  <div class=\"relative card\">\r\n  <div class=\"h-48 bg-white rounded-lg overflow-hidden\"><img\r\n          class=\"h-full w-full object-cover hover:opacity-90 hover-default\" src=\"${image}\"\r\n          alt=\"${name}\" loading=\"lazy\"></div>\r\n  <div class=\"mt-2\">\r\n      <h3 class=\"text-lg font-semibold\">${name}</h3>\r\n      <div class=\"flex gap-1 mt-2 items-center\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 text-secondary-400\"\r\n        viewBox=\"0 0 20 20\" fill=\"currentColor\"> ${rating}\r\n        <path\r\n            d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n    </svg>\r\n    <span class=\"text-xs text-gray-400 ml-1\" data-reviews>${reviews}</span> \r\n      </div>\r\n      <p class=\"text-sm text-gray-400 mt-1\">${info}</p>\r\n  </div>\r\n  <div class=\"bg-white p-1 inline-block absolute top-2 right-2 rounded-full close-btn\">\r\n    <svg class=\"h-6 w-6 cursor-pointer close\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<path class=\"path\" d=\"M6 18L18 6M6 6L18 18\" stroke=\"#343a40\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n</svg>\r\n  </div>\r\n\r\n</div>\r\n  `;\r\n\r\n  destinationsGrid.innerHTML += card;\r\n};\r\n\r\nif (activities === null) {\r\n  p.classList.remove(\"hidden\");\r\n} else {\r\n  p.classList.add(\"hidden\");\r\n  activities.forEach(destinationTemplateCard);\r\n}\r\n\r\ndestinationsGrid.addEventListener(\"click\", e => {\r\n  if (\r\n    e.target.classList.contains(\"close\") ||\r\n    e.target.classList.contains(\"path\")\r\n  ) {\r\n    const closeBtn = e.target.closest(\".close-btn\");\r\n    const parent = closeBtn.parentElement;\r\n    const name = parent.querySelector(\"h3\").textContent;\r\n\r\n    // Filtering out the activity we clicked on.\r\n    const newActivities = activities.filter(item => item.name !== name);\r\n\r\n    // I then override my localStorage - LOVED_PLACES with the new filtered array\r\n    localStorage.setItem(\"LOVED_PLACES\", JSON.stringify(newActivities));\r\n\r\n    // I then update the activities variable with the updated localStorage array\r\n    activities = JSON.parse(localStorage.getItem(\"LOVED_PLACES\"));\r\n\r\n    // Have to delete previous cards or else the new cards will be added to the existing ones.\r\n    destinationsGrid.innerHTML = \"\";\r\n\r\n    // This will toggle a paragraph saying your cart is empty depending on if it is.\r\n    if (activities.length === 0) {\r\n      p.classList.remove(\"hidden\");\r\n    } else {\r\n      p.classList.add(\"hidden\");\r\n    }\r\n\r\n    // I then populated the page with it's new  destinationTemplateCards.\r\n    activities.forEach(destinationTemplateCard);\r\n  }\r\n});\r\n"]}